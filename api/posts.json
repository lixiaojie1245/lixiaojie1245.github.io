{"total":10,"pageSize":10,"pageCount":1,"data":[{"title":"Rust empowers Python","slug":"Rust-empowers-Python","date":"2025-03-04T11:12:14.000Z","updated":"2025-03-04T11:23:57.432Z","comments":true,"path":"api/articles/Rust-empowers-Python.json","excerpt":"","keywords":null,"cover":null,"content":"<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># (replace string_sum with the desired package name)</span></span><br><span class=\"line\"><span class=\"built_in\">mkdir</span> string_sum</span><br><span class=\"line\"><span class=\"built_in\">cd</span> string_sum</span><br><span class=\"line\">python -m venv .<span class=\"built_in\">env</span></span><br><span class=\"line\"><span class=\"built_in\">source</span> .<span class=\"built_in\">env</span>/bin/activate</span><br></pre></td></tr></table></figure>\n<h1 id=\"install-maturin\"><a href=\"#install-maturin\" class=\"headerlink\" title=\"install maturin\"></a>install maturin</h1><p>maturin is a helper to generar some rust code to connect to python</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install maturin</span><br></pre></td></tr></table></figure>\n<h2 id=\"if-using-to-long-time-then-press-Ctrl-C-use-cargo-install\"><a href=\"#if-using-to-long-time-then-press-Ctrl-C-use-cargo-install\" class=\"headerlink\" title=\"if using to long time, then press Ctrl-C, use cargo install\"></a>if using to long time, then press Ctrl-C, use cargo install</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cargo install maturin</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">maturin init</span><br><span class=\"line\"><span class=\"comment\"># or use pyo3</span></span><br><span class=\"line\">maturin init --bindings pyo3</span><br></pre></td></tr></table></figure>\n<h1 id=\"build\"><a href=\"#build\" class=\"headerlink\" title=\"build\"></a>build</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">maturin develop</span><br></pre></td></tr></table></figure>\n<h1 id=\"use-the-model\"><a href=\"#use-the-model\" class=\"headerlink\" title=\"use the model\"></a>use the model</h1><h2 id=\"main-py\"><a href=\"#main-py\" class=\"headerlink\" title=\"main.py\"></a>main.py</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> string_sum</span><br><span class=\"line\">string_sum.sum_as_string(<span class=\"number\">5</span>, <span class=\"number\">20</span>)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python main.py</span><br></pre></td></tr></table></figure>\n","text":"1<br>2<br>3<br>4<br>5<br># (replace string_sum with the desired package name)<br>mkdir string_sum<br>cd string_sum<br>python -m venv .env<br","raw":null,"photos":[],"categories":[],"tags":[{"name":"rust python pyo3","slug":"rust-python-pyo3","count":1,"path":"api/tags/rust-python-pyo3.json"}]},{"title":"termux user start app","slug":"termux-user-start-app","date":"2025-03-04T11:09:55.000Z","updated":"2025-03-04T11:10:32.352Z","comments":true,"path":"api/articles/termux-user-start-app.json","excerpt":"","keywords":null,"cover":null,"content":"<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"function\"><span class=\"title\">my_init</span></span>()&#123;</span><br><span class=\"line\"><span class=\"keyword\">if</span> pgrep -x $* &gt;/dev/null</span><br><span class=\"line\">  <span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"string\">&quot; &gt; $* started&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">else</span></span><br><span class=\"line\">    <span class=\"built_in\">nohup</span> $* &gt;&gt; <span class=\"variable\">$log_path</span>/my/$*.<span class=\"built_in\">log</span> 2&gt;&amp;1  &amp;</span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"string\">&quot; &gt; $* start success&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">my_init sshd</span><br><span class=\"line\">my_init gitea</span><br></pre></td></tr></table></figure>\n","text":"1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>function my_init()&#123;<br>if pgrep -x $* &gt;/dev/null<br>  then<br> ","raw":null,"photos":[],"categories":[],"tags":[{"name":"termux phone","slug":"termux-phone","count":1,"path":"api/tags/termux-phone.json"}]},{"title":"new termux init","slug":"new-termux-init","date":"2025-03-02T09:15:15.000Z","updated":"2025-03-04T11:30:42.772Z","comments":true,"path":"api/articles/new-termux-init.json","excerpt":"","keywords":null,"cover":null,"content":"<h1 id=\"No-1\"><a href=\"#No-1\" class=\"headerlink\" title=\"No.1\"></a>No.1</h1><p>Install termux</p>\n<h1 id=\"No-2\"><a href=\"#No-2\" class=\"headerlink\" title=\"No.2\"></a>No.2</h1><p>Install some software</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># tools</span></span><br><span class=\"line\">pkg install -y git curl wget htop autojump</span><br><span class=\"line\"><span class=\"comment\"># programming language</span></span><br><span class=\"line\">pkg install -y golang zsh python3 perl php ruby openjdk-21 rust</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"Local-oh-my-zsh-install\"><a href=\"#Local-oh-my-zsh-install\" class=\"headerlink\" title=\"Local oh-my-zsh install\"></a>Local oh-my-zsh install</h1><h5 id=\"Install-oh-my-zsh-via-curl\"><a href=\"#Install-oh-my-zsh-via-curl\" class=\"headerlink\" title=\"Install oh-my-zsh via curl\"></a>Install oh-my-zsh via curl</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sh -c &quot;$(curl -fsSL https://gitee.com/Devkings/oh_my_zsh_install/raw/master/install.sh)&quot;</span><br></pre></td></tr></table></figure>\n<h5 id=\"Install-oh-my-zsh-via-wget\"><a href=\"#Install-oh-my-zsh-via-wget\" class=\"headerlink\" title=\"Install oh-my-zsh via wget\"></a>Install oh-my-zsh via wget</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sh -c &quot;$(wget https://gitee.com/Devkings/oh_my_zsh_install/raw/master/install.sh -O -)&quot;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"change-profile\"><a href=\"#change-profile\" class=\"headerlink\" title=\"change profile\"></a>change profile</h1><p><a href=\"/termux-user-start-app\">start user app</a></p>\n","text":"No.1Install termuxNo.2Install some software1<br>2<br>3<br>4<br># tools<br>pkg install -y git curl wget htop autojump<br># programming langua","raw":null,"photos":[],"categories":[],"tags":[{"name":"termux linux phone","slug":"termux-linux-phone","count":1,"path":"api/tags/termux-linux-phone.json"}]},{"title":"bypy: a baiducloud cli tool","slug":"bypy-a-baiducloud-cli-tool","date":"2025-02-22T10:11:02.000Z","updated":"2025-02-22T10:15:46.681Z","comments":true,"path":"api/articles/bypy-a-baiducloud-cli-tool.json","excerpt":"","keywords":null,"cover":null,"content":"<h1 id=\"使用命令行操作百度网盘\"><a href=\"#使用命令行操作百度网盘\" class=\"headerlink\" title=\"使用命令行操作百度网盘\"></a>使用命令行操作百度网盘</h1><p>在Linux环境下，通过命令行操作百度网盘可以方便地进行文件的上传、下载和同步。本文将介绍如何使用Python包bypy来实现这些操作。</p>\n<h1 id=\"安装与授权\"><a href=\"#安装与授权\" class=\"headerlink\" title=\"安装与授权\"></a>安装与授权</h1><p>首先，需要安装bypy包。可以通过pip命令进行安装：<br>pip install bypy<br>安装完成后，需要进行授权。输入以下命令以激活授权界面：<br>bypy info<br>终端会输出一个网址，复制该网址并在浏览器中打开，获取授权码后粘贴回终端并回车。授权完成后，即可使用bypy进行操作 。</p>\n<h1 id=\"查看百度网盘目录\"><a href=\"#查看百度网盘目录\" class=\"headerlink\" title=\"查看百度网盘目录\"></a>查看百度网盘目录</h1><p>使用以下命令可以查看百度网盘目录下的文件：<br>bypy list<br>该命令会显示百度网盘&#x2F;apps&#x2F;bypy目录下的所有文件 。</p>\n<h1 id=\"上传文件到百度网盘\"><a href=\"#上传文件到百度网盘\" class=\"headerlink\" title=\"上传文件到百度网盘\"></a>上传文件到百度网盘</h1><p>可以使用以下命令将本地文件上传到百度网盘：<br>bypy upload [localpath] [remotepath]<br>例如，将本地文件上传到百度网盘的bypy目录：<br>bypy upload &#x2F;path&#x2F;to&#x2F;local&#x2F;file &#x2F;apps&#x2F;bypy&#x2F;file</p>\n<h1 id=\"如果需要同步整个目录，可以使用以下命令：\"><a href=\"#如果需要同步整个目录，可以使用以下命令：\" class=\"headerlink\" title=\"如果需要同步整个目录，可以使用以下命令：\"></a>如果需要同步整个目录，可以使用以下命令：</h1><p>bypy syncup [localdir] [remotedir]<br>例如：<br>bypy syncup &#x2F;path&#x2F;to&#x2F;local&#x2F;dir &#x2F;apps&#x2F;bypy&#x2F;dir<br>这些命令会检查文件校验，如果文件已经存在于百度网盘中，则可以实现秒传 。</p>\n<h1 id=\"从百度网盘下载文件\"><a href=\"#从百度网盘下载文件\" class=\"headerlink\" title=\"从百度网盘下载文件\"></a>从百度网盘下载文件</h1><p>可以使用以下命令从百度网盘下载单个文件：<br>bypy downfile <remotefile> [localpath]<br>例如：<br>bypy downfile &#x2F;apps&#x2F;bypy&#x2F;file &#x2F;path&#x2F;to&#x2F;local&#x2F;file<br>如果需要下载整个目录，可以使用以下命令：<br>bypy downdir [remotedir] [localdir]<br>例如：<br>bypy downdir &#x2F;apps&#x2F;bypy&#x2F;dir &#x2F;path&#x2F;to&#x2F;local&#x2F;dir<br>这些命令可以使用第三方下载器如aria2来加速下载</p>\n<h1 id=\"其他常用命令\"><a href=\"#其他常用命令\" class=\"headerlink\" title=\"其他常用命令\"></a>其他常用命令</h1><p>bypy还提供了其他一些常用命令，如：<br>bypy delete：删除百度网盘上的文件<br>bypy makedir：在百度网盘上创建目录<br>bypy move：移动百度网盘上的文件<br>bypy copy：复制百度网盘上的文件<br>bypy compare：比较本地和云文件的差异</p>\n<h1 id=\"查看所有可用命令：\"><a href=\"#查看所有可用命令：\" class=\"headerlink\" title=\"查看所有可用命令：\"></a>查看所有可用命令：</h1><p>bypy help<br>或者查看某个命令的具体使用方式：<br>bypy help <command></p>\n","text":"使用命令行操作百度网盘在Linux环境下，通过命令行操作百度网盘可以方便地进行文件的上传、下载和同步。本文将介绍如何使用Python包bypy来实现这些操作。安装与授权首先，需要安装bypy包。可以通过pip命令进行安装：<br>pip install bypy<br>安装完成后","raw":null,"photos":[],"categories":[],"tags":[{"name":"baiducloud","slug":"baiducloud","count":1,"path":"api/tags/baiducloud.json"}]},{"title":"java using mvn build a single jar","slug":"java-using-mvn-build-a-single-jar","date":"2025-02-22T08:34:51.000Z","updated":"2025-02-22T08:43:37.751Z","comments":true,"path":"api/articles/java-using-mvn-build-a-single-jar.json","excerpt":"","keywords":null,"cover":null,"content":"<h1 id=\"mvn-create-a-app\"><a href=\"#mvn-create-a-app\" class=\"headerlink\" title=\"mvn create a app\"></a>mvn create a app</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mvn archetype:generate -DgroupId=com.example -DartifactId=appName -DarchetypeArtifactId=maven-archetype-quickstart -DinteractiveMode=<span class=\"literal\">false</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> file_path</span><br><span class=\"line\"></span><br><span class=\"line\">vim pom.xml</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"use-spring-boot-maven-plugin-of-springframework\"><a href=\"#use-spring-boot-maven-plugin-of-springframework\" class=\"headerlink\" title=\"use spring-boot-maven-plugin of springframework\"></a>use spring-boot-maven-plugin of springframework</h1><p>Insert the following text above the closing tag of the package, paying attention to the nesting of tags.</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">build</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">plugins</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.4.3<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"comment\">&lt;!-- You can change the mainClass configuration--&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span></span><br><span class=\"line\">                                <span class=\"tag\">&lt;<span class=\"name\">mainClass</span>&gt;</span>com.example.App<span class=\"tag\">&lt;/<span class=\"name\">mainClass</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;/<span class=\"name\">configuration</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">executions</span>&gt;</span></span><br><span class=\"line\">                                <span class=\"tag\">&lt;<span class=\"name\">execution</span>&gt;</span></span><br><span class=\"line\">                                        <span class=\"tag\">&lt;<span class=\"name\">goals</span>&gt;</span></span><br><span class=\"line\">                                                <span class=\"tag\">&lt;<span class=\"name\">goal</span>&gt;</span>repackage<span class=\"tag\">&lt;/<span class=\"name\">goal</span>&gt;</span></span><br><span class=\"line\">                                        <span class=\"tag\">&lt;/<span class=\"name\">goals</span>&gt;</span></span><br><span class=\"line\">                                <span class=\"tag\">&lt;/<span class=\"name\">execution</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;/<span class=\"name\">executions</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">plugins</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">build</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"build-and-run\"><a href=\"#build-and-run\" class=\"headerlink\" title=\"build and run\"></a>build and run</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mvn clear install</span><br><span class=\"line\">java -jar target/<span class=\"variable\">$&#123;appName&#125;</span>*.jar</span><br></pre></td></tr></table></figure>\n","text":"mvn create a app1<br>mvn archetype:generate -DgroupId=com.example -DartifactId=appName -DarchetypeArtifactId=maven-archetype-quickstart -Din","raw":null,"photos":[],"categories":[],"tags":[{"name":"java mvn","slug":"java-mvn","count":1,"path":"api/tags/java-mvn.json"}]},{"title":"php 500 functions","slug":"php-500-functions","date":"2025-02-17T11:13:53.000Z","updated":"2025-02-17T11:14:48.448Z","comments":true,"path":"api/articles/php-500-functions.json","excerpt":"","keywords":null,"cover":null,"content":"<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br><span class=\"line\">367</span><br><span class=\"line\">368</span><br><span class=\"line\">369</span><br><span class=\"line\">370</span><br><span class=\"line\">371</span><br><span class=\"line\">372</span><br><span class=\"line\">373</span><br><span class=\"line\">374</span><br><span class=\"line\">375</span><br><span class=\"line\">376</span><br><span class=\"line\">377</span><br><span class=\"line\">378</span><br><span class=\"line\">379</span><br><span class=\"line\">380</span><br><span class=\"line\">381</span><br><span class=\"line\">382</span><br><span class=\"line\">383</span><br><span class=\"line\">384</span><br><span class=\"line\">385</span><br><span class=\"line\">386</span><br><span class=\"line\">387</span><br><span class=\"line\">388</span><br><span class=\"line\">389</span><br><span class=\"line\">390</span><br><span class=\"line\">391</span><br><span class=\"line\">392</span><br><span class=\"line\">393</span><br><span class=\"line\">394</span><br><span class=\"line\">395</span><br><span class=\"line\">396</span><br><span class=\"line\">397</span><br><span class=\"line\">398</span><br><span class=\"line\">399</span><br><span class=\"line\">400</span><br><span class=\"line\">401</span><br><span class=\"line\">402</span><br><span class=\"line\">403</span><br><span class=\"line\">404</span><br><span class=\"line\">405</span><br><span class=\"line\">406</span><br><span class=\"line\">407</span><br><span class=\"line\">408</span><br><span class=\"line\">409</span><br><span class=\"line\">410</span><br><span class=\"line\">411</span><br><span class=\"line\">412</span><br><span class=\"line\">413</span><br><span class=\"line\">414</span><br><span class=\"line\">415</span><br><span class=\"line\">416</span><br><span class=\"line\">417</span><br><span class=\"line\">418</span><br><span class=\"line\">419</span><br><span class=\"line\">420</span><br><span class=\"line\">421</span><br><span class=\"line\">422</span><br><span class=\"line\">423</span><br><span class=\"line\">424</span><br><span class=\"line\">425</span><br><span class=\"line\">426</span><br><span class=\"line\">427</span><br><span class=\"line\">428</span><br><span class=\"line\">429</span><br><span class=\"line\">430</span><br><span class=\"line\">431</span><br><span class=\"line\">432</span><br><span class=\"line\">433</span><br><span class=\"line\">434</span><br><span class=\"line\">435</span><br><span class=\"line\">436</span><br><span class=\"line\">437</span><br><span class=\"line\">438</span><br><span class=\"line\">439</span><br><span class=\"line\">440</span><br><span class=\"line\">441</span><br><span class=\"line\">442</span><br><span class=\"line\">443</span><br><span class=\"line\">444</span><br><span class=\"line\">445</span><br><span class=\"line\">446</span><br><span class=\"line\">447</span><br><span class=\"line\">448</span><br><span class=\"line\">449</span><br><span class=\"line\">450</span><br><span class=\"line\">451</span><br><span class=\"line\">452</span><br><span class=\"line\">453</span><br><span class=\"line\">454</span><br><span class=\"line\">455</span><br><span class=\"line\">456</span><br><span class=\"line\">457</span><br><span class=\"line\">458</span><br><span class=\"line\">459</span><br><span class=\"line\">460</span><br><span class=\"line\">461</span><br><span class=\"line\">462</span><br><span class=\"line\">463</span><br><span class=\"line\">464</span><br><span class=\"line\">465</span><br><span class=\"line\">466</span><br><span class=\"line\">467</span><br><span class=\"line\">468</span><br><span class=\"line\">469</span><br><span class=\"line\">470</span><br><span class=\"line\">471</span><br><span class=\"line\">472</span><br><span class=\"line\">473</span><br><span class=\"line\">474</span><br><span class=\"line\">475</span><br><span class=\"line\">476</span><br><span class=\"line\">477</span><br><span class=\"line\">478</span><br><span class=\"line\">479</span><br><span class=\"line\">480</span><br><span class=\"line\">481</span><br><span class=\"line\">482</span><br><span class=\"line\">483</span><br><span class=\"line\">484</span><br><span class=\"line\">485</span><br><span class=\"line\">486</span><br><span class=\"line\">487</span><br><span class=\"line\">488</span><br><span class=\"line\">489</span><br><span class=\"line\">490</span><br><span class=\"line\">491</span><br><span class=\"line\">492</span><br><span class=\"line\">493</span><br><span class=\"line\">494</span><br><span class=\"line\">495</span><br><span class=\"line\">496</span><br><span class=\"line\">497</span><br><span class=\"line\">498</span><br><span class=\"line\">499</span><br><span class=\"line\">500</span><br><span class=\"line\">501</span><br><span class=\"line\">502</span><br><span class=\"line\">503</span><br><span class=\"line\">504</span><br><span class=\"line\">505</span><br><span class=\"line\">506</span><br><span class=\"line\">507</span><br><span class=\"line\">508</span><br><span class=\"line\">509</span><br><span class=\"line\">510</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_ invoke__\">usleep</span>()  <span class=\"comment\">//函数延迟代码执行若干微秒。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">unpack</span>()  <span class=\"comment\">//函数从二进制字符串对数据进行解包。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">uniqid</span>()  <span class=\"comment\">//函数基于以微秒计的当前时间，生成一个唯一的 ID。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">time_sleep_until</span>()  <span class=\"comment\">//函数延迟代码执行直到指定的时间。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">time_nanosleep</span>()  <span class=\"comment\">//函数延迟代码执行若干秒和纳秒。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">sleep</span>()  <span class=\"comment\">//函数延迟代码执行若干秒。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">show_source</span>()  <span class=\"comment\">//函数对文件进行语法高亮显示。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">strip_whitespace</span>()  <span class=\"comment\">//函数返回已删除 PHP 注释以及空白字符的源代码文件。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">pack</span>()  <span class=\"comment\">//函数把数据装入一个二进制字符串。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">ignore_user_abort</span>()  <span class=\"comment\">//函数设置与客户机断开是否会终止脚本的执行。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">highlight_string</span>()  <span class=\"comment\">//函数对字符串进行语法高亮显示。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">highlight_file</span>()  <span class=\"comment\">//函数对文件进行语法高亮显示。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">get_browser</span>()  <span class=\"comment\">//函数返回用户浏览器的性能。</span></span><br><span class=\"line\"><span class=\"keyword\">exit</span>()  <span class=\"comment\">//函数输出一条消息，并退出当前脚本。</span></span><br><span class=\"line\"><span class=\"keyword\">eval</span>()  <span class=\"comment\">//函数把字符串按照 PHP 代码来计算。</span></span><br><span class=\"line\"><span class=\"keyword\">die</span>()  <span class=\"comment\">//函数输出一条消息，并退出当前脚本。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">defined</span>()  <span class=\"comment\">//函数检查某常量是否存在。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">define</span>()  <span class=\"comment\">//函数定义一个常量。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">constant</span>()  <span class=\"comment\">//函数返回常量的值。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">connection_status</span>()  <span class=\"comment\">//函数返回当前的连接状态。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">connection_aborted</span>()  <span class=\"comment\">//函数检查是否断开客户机。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">zip_read</span>()  <span class=\"comment\">//函数读取打开的 zip 档案中的下一个文件。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">zip_open</span>()  <span class=\"comment\">//函数打开 ZIP 文件以供读取。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">zip_entry_read</span>()  <span class=\"comment\">//函数从打开的 zip 档案项目中获取内容。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">zip_entry_open</span>()  <span class=\"comment\">//函数打开一个 ZIP 档案项目以供读取。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">zip_entry_name</span>()  <span class=\"comment\">//函数返回 zip 档案项目的名称。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">zip_entry_filesize</span>()  <span class=\"comment\">//函数返回 zip 档案项目的原始大小（在压缩之前）。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">zip_entry_compressionmethod</span>()  <span class=\"comment\">//函数返回 zip 档案项目的压缩方法。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">zip_entry_compressedsize</span>()  <span class=\"comment\">//函数返回 zip 档案项目的压缩文件尺寸。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">zip_entry_close</span>()  <span class=\"comment\">//函数关闭由 zip_entry_open()  //函数打开的 zip 档案文件。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">zip_close</span>()  <span class=\"comment\">//函数关闭由 zip_open()  //函数打开的 zip 档案文件。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">xml_set_unparsed_entity_decl_handler</span>()  <span class=\"comment\">//函数规定在遇到无法解析的实体名称（NDATA）声明时被调用的函数。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">xml_set_processing_instruction_handler</span>()  <span class=\"comment\">//函数规定当解析器在 XML 文档中找到处理指令时所调用的函数。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">xml_set_object</span>()  <span class=\"comment\">//函数允许在对象中使用 XML 解析器。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">xml_set_notation_decl_handler</span>()  <span class=\"comment\">//函数规定当解析器在 XML 文档中找到符号声明时被调用的函数。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">xml_set_external_entity_ref_handler</span>()  <span class=\"comment\">//函数规定当解析器在 XML 文档中找到外部实体时被调用的函数。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">xml_set_element_handler</span>()  <span class=\"comment\">//函数建立起始和终止元素处理器。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">xml_set_default_handler</span>()  <span class=\"comment\">//函数为 XML 解析器建立默认的数据处理器。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">xml_set_character_data_handler</span>()  <span class=\"comment\">//函数建立字符数据处理器。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">xml_parser_set_option</span>()  <span class=\"comment\">//函数为 XML 解析器进行选项设置。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">xml_parser_get_option</span>()  <span class=\"comment\">//函数从 XML 解析器获取选项设置信息。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">xml_parser_free</span>()  <span class=\"comment\">//函数释放 XML 解析器。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">xml_parser_create</span>()  <span class=\"comment\">//函数创建 XML 解析器。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">xml_parser_create_ns</span>()  <span class=\"comment\">//函数创建带有命名空间支持的 XML 解析器。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">xml_parse_into_struct</span>()  <span class=\"comment\">//函数把 XML 数据解析到数组中。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">xml_parse</span>()  <span class=\"comment\">//函数解析 XML 文档。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">xml_get_error_code</span>()  <span class=\"comment\">//函数获取 XML 解析器错误代码。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">xml_get_current_line_number</span>()  <span class=\"comment\">//函数获取 XML 解析器的当前行号。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">xml_get_current_column_number</span>()  <span class=\"comment\">//函数获取 XML 解析器的当前列号。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">xml_get_current_byte_index</span>()  <span class=\"comment\">//函数获取 XML 解析器的当前字节索引。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">xml_error_string</span>()  <span class=\"comment\">//函数获取 XML 解析器的错误描述。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">utf8_encode</span>()  <span class=\"comment\">//函数把 ISO-8859-1 字符串编码为 UTF-8。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">utf8_decode</span>()  <span class=\"comment\">//函数把 UTF-8 字符串解码为 ISO-8859-1。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">wordwrap</span>()  <span class=\"comment\">//函数按照指定长度对字符串进行折行处理。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">vsprintf</span>()  <span class=\"comment\">//函数把格式化字符串写入变量中。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">vprintf</span>()  <span class=\"comment\">//函数输出格式化的字符串。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">vfprintf</span>()  <span class=\"comment\">//函数把格式化的字符串写到指定的输出流。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">ucwords</span>()  <span class=\"comment\">//函数把字符串中每个单词的首字符转换为大写。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">ucfirst</span>()  <span class=\"comment\">//函数把字符串中的首字符转换为大写。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">trim</span>()  <span class=\"comment\">//函数从字符串的两端删除空白字符和其他预定义字符。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">substr_replace</span>()  <span class=\"comment\">//函数把字符串的一部分替换为另一个字符串。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">substr_count</span>()  <span class=\"comment\">//函数计算子串在字符串中出现的次数。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">substr_compare</span>()  <span class=\"comment\">//函数从指定的开始长度比较两个字符串。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">substr</span>()  <span class=\"comment\">//函数返回字符串的一部分。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">strtr</span>()  <span class=\"comment\">//函数转换字符串中特定的字符。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">strtoupper</span>()  <span class=\"comment\">//函数把字符串转换为大写。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">strtolower</span>()  <span class=\"comment\">//函数把字符串转换为小写。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">strtok</span>()  <span class=\"comment\">//函数把字符串分割为更小的字符串。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">strstr</span>()  <span class=\"comment\">//函数搜索一个字符串在另一个字符串中的第一次出现。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">strspn</span>()  <span class=\"comment\">//函数返回在字符串中包含的特定字符的数目。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">strrpos</span>()  <span class=\"comment\">//函数查找字符串在另一个字符串中最后一次出现的位置。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">strripos</span>()  <span class=\"comment\">//函数查找字符串在另一个字符串中最后一次出现的位置。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">strrev</span>()  <span class=\"comment\">//函数反转字符串。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">strrchr</span>()  <span class=\"comment\">//函数查找字符串在另一个字符串中最后一次出现的位置，并返回从该位置到字符串结尾的所有字符。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">strpos</span>()  <span class=\"comment\">//函数返回字符串在另一个字符串中第一次出现的位置。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">strpbrk</span>()  <span class=\"comment\">//函数在字符串中搜索指定字符中的任意一个。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">strncmp</span>()  <span class=\"comment\">//函数比较两个字符串。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">strncasecmp</span>()  <span class=\"comment\">//函数比较两个字符串。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">strnatcmp</span>()  <span class=\"comment\">//函数使用一种“自然”算法来比较两个字符串。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">strnatcasecmp</span>()  <span class=\"comment\">//函数使用一种“自然”算法来比较两个字符串。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">strlen</span>()  <span class=\"comment\">//函数返回字符串的长度。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">stristr</span>()  <span class=\"comment\">//函数查找字符串在另一个字符串中第一次出现的位置。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">stripos</span>()  <span class=\"comment\">//函数返回字符串在另一个字符串中第一次出现的位置。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">stripslashes</span>()  <span class=\"comment\">//函数删除由 addslashes()  //函数添加的反斜杠。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">stripcslashes</span>()  <span class=\"comment\">//函数删除由 addcslashes()  //函数添加的反斜杠。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">strip_tags</span>()  <span class=\"comment\">//函数剥去 HTML、XML 以及 PHP 的标签。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">strcspn</span>()  <span class=\"comment\">//函数返回在找到任何指定的字符之前，在字符串查找的字符数。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">strcoll</span>()  <span class=\"comment\">//函数比较两个字符串。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">strcmp</span>()  <span class=\"comment\">//函数比较两个字符串。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">strchr</span>()  <span class=\"comment\">//函数搜索一个字符串在另一个字符串中的第一次出现。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">strcasecmp</span>()  <span class=\"comment\">//函数比较两个字符串。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">str_word_count</span>()  <span class=\"comment\">//函数计算字符串中的单词数。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">str_split</span>()  <span class=\"comment\">//函数把字符串分割到数组中。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">str_shuffle</span>()  <span class=\"comment\">//函数随机地打乱字符串中的所有字符。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">str_rot13</span>()  <span class=\"comment\">//函数对字符串执行 ROT13 编码。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">str_replace</span>()  <span class=\"comment\">//函数使用一个字符串替换字符串中的另一些字符。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">str_repeat</span>()  <span class=\"comment\">//函数把字符串重复指定的次数。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">str_pad</span>()  <span class=\"comment\">//函数把字符串填充为指定的长度。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">str_ireplace</span>()  <span class=\"comment\">//函数使用一个字符串替换字符串中的另一些字符。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">sscanf</span>()  <span class=\"comment\">//函数根据指定的格式解析来自一个字符串的输入。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">sprintf</span>()  <span class=\"comment\">//函数把格式化的字符串写写入一个变量中。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">soundex</span>()  <span class=\"comment\">//函数计算字符串的 soundex 键。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">similar_text</span>()  <span class=\"comment\">//函数计算两个字符串的匹配字符的数目。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">sha1_file</span>()  <span class=\"comment\">//函数计算文件的 SHA-1 散列。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">sha1</span>()  <span class=\"comment\">//函数计算字符串的 SHA-1 散列。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">setlocale</span>()  <span class=\"comment\">//函数设置地区信息（地域信息）。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">rtrim</span>()  <span class=\"comment\">//P</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">rtrim</span>()  <span class=\"comment\">//函数</span></span><br><span class=\"line\">PHP String 函数</span><br><span class=\"line\"><span class=\"title function_ invoke__\">quotemeta</span>()  <span class=\"comment\">//函数在字符串中某些预定义的字符前添加反斜杠。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">quoted_printable_decode</span>()  <span class=\"comment\">//函数对经过 quoted-printable 编码后的字符串进行解码，返回 8 位的字符串。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">printf</span>()  <span class=\"comment\">//函数输出格式化的字符串。</span></span><br><span class=\"line\"><span class=\"keyword\">print</span>()  <span class=\"comment\">//函数输出一个或多个字符串。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">parse_str</span>()  <span class=\"comment\">//函数把查询字符串解析到变量中。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">ord</span>()  <span class=\"comment\">//函数返回字符串第一个字符的 ASCII 值。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">number_format</span>()  <span class=\"comment\">//函数通过千位分组来格式化数字。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">nl2br</span>()  <span class=\"comment\">//函数在字符串中的每个新行 (\\n) 之前插入 HTML 换行符 (&lt;br /&gt;)。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">nl_langinfo</span>()  <span class=\"comment\">//函数返回指定的本地信息。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">money_format</span>()  <span class=\"comment\">//函数把字符串格式化为货币字符串。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">metaphone</span>()  <span class=\"comment\">//函数计算字符串的 metaphone 键。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">md5_file</span>()  <span class=\"comment\">//函数计算文件的 MD5 散列。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">md5</span>()  <span class=\"comment\">//函数计算字符串的 MD5 散列。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">ltrim</span>()  <span class=\"comment\">//函数从字符串左侧删除空格或其他预定义字符。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">localeconv</span>()  <span class=\"comment\">//函数返回包含本地数字及货币信息格式的数组。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">levenshtein</span>()  <span class=\"comment\">//函数返回两个字符串之间的 Levenshtein 距离。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">join</span>()  <span class=\"comment\">//函数把数组元素组合为一个字符串。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">implode</span>()  <span class=\"comment\">//函数把数组元素组合为一个字符串。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">htmlspecialchars</span>()  <span class=\"comment\">//函数把一些预定义的字符转换为 HTML 实体。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">html_entity_decode</span>()  <span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">chars_decode</span>()  <span class=\"comment\">//函数</span></span><br><span class=\"line\">PHP String 函数</span><br><span class=\"line\"><span class=\"title function_ invoke__\">htmlentities</span>()  <span class=\"comment\">//函数把字符转换为 HTML 实体。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">html_entity_decode</span>()  <span class=\"comment\">//函数把 HTML 实体转换为字符。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">hebrevc</span>()  <span class=\"comment\">//函数把希伯来文本从右至左的流转换为左至右的流。它也会把新行 (\\n) 转换为 &lt;br /&gt;。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">hebrev</span>()  <span class=\"comment\">//函数把希伯来文本从右至左的流转换为左至右的流。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">get_html_translation_table</span>()  <span class=\"comment\">//函数返回被 htmlentities()  //和 htmlspecialchars()  //函数使用的翻译表。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">fprintf</span>()  <span class=\"comment\">//函数把格式化的字符串写到指定的输出流（例如：文件或数据库）。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">explode</span>()  <span class=\"comment\">//函数把字符串分割为数组。</span></span><br><span class=\"line\"><span class=\"keyword\">echo</span>()  <span class=\"comment\">//函数输出一个或多个字符串。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">crypt</span>()  <span class=\"comment\">//函数返回使用 DES、Blowfish 或 MD5 加密的字符串。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">crc32</span>()  <span class=\"comment\">//函数计算一个字符串的 crc32 多项式。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">count_chars</span>()  <span class=\"comment\">//函数返回字符串所用字符的信息。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">convert_uuencode</span>()  <span class=\"comment\">//函数使用 uuencode 算法对字符串进行编码。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">convert_uudecode</span>()  <span class=\"comment\">//函数对 uuencode 编码的字符串进行解码。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">convert_cyr_string</span>()  <span class=\"comment\">//函数把字符由一种 Cyrillic 字符转换成另一种。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">chunk_split</span>()  <span class=\"comment\">//函数把字符串分割为一连串更小的部分。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">chr</span>()  <span class=\"comment\">//函数从指定的 ASCII 值返回字符。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">chop</span>()  <span class=\"comment\">//函数从字符串的末端开始删除空白字符或其他预定义字符。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">bin2hex</span>()  <span class=\"comment\">//函数把 ASCII 字符的字符串转换为十六进制值。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">addslashes</span>()  <span class=\"comment\">//函数在指定的预定义字符前添加反斜杠。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">addcslashes</span>()  <span class=\"comment\">//函数在指定的字符前添加反斜杠。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">xpath</span>()  <span class=\"comment\">//函数运行对 XML 文档的 XPath 查询。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">simplexml_load_string</span>()  <span class=\"comment\">//函数把 XML 字符串载入对象中。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">simplexml_load_file</span>()  <span class=\"comment\">//函数把 XML 文档载入对象中。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">simplexml_import_dom</span>()  <span class=\"comment\">//函数把 DOM 节点转换为 SimpleXMLElement 对象。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">registerXPathNamespace</span>()  <span class=\"comment\">//函数为下一次 XPath 查询创建命名空间语境。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">getNamespace</span>()  <span class=\"comment\">//函数获取在 XML 文档中使用的命名空间。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">getName</span>()  <span class=\"comment\">//函数从 SimpleXMLElement 对象获取 XML 元素的名称。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">getDocNamespaces</span>()  <span class=\"comment\">//函数从 SimpleXMLElement 对象返回在 XML 文档中声明的命名空间。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">children</span>()  <span class=\"comment\">//函数获取指定节点的子节点。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">attributes</span>()  <span class=\"comment\">//函数获取 SimpleXML 元素的属性。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">asXML</span>()  <span class=\"comment\">//函数以字符串的形式从 SimpleXMLElement 对象返回 XML 文档。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">addChild</span>()  <span class=\"comment\">//函数向指定的 XML 节点添加一个子节点。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">addAttribute</span>()  <span class=\"comment\">//函数给 SimpleXML 元素添加一个属性。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">__construct</span>()  <span class=\"comment\">//函数创建一个新的 SimpleXMLElement 对象。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">mysql_unbuffered_query</span>()  <span class=\"comment\">//函数向 MySQL 发送一条 SQL 查询（不获取 / 缓存结果）。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">mysql_thread_id</span>()  <span class=\"comment\">//函数返回当前线程的 ID。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">mysql_stat</span>()  <span class=\"comment\">//函数返回 MySQL 服务器的当前系统状态。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">mysql_select_db</span>()  <span class=\"comment\">//函数设置活动的 MySQL 数据库。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">mysql_result</span>()  <span class=\"comment\">//函数返回结果集中一个字段的值。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">mysql_real_escape_string</span>()  <span class=\"comment\">//函数转义 SQL 语句中使用的字符串中的特殊字符。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">mysql_query</span>()  <span class=\"comment\">//函数执行一条 MySQL 查询。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">mysql_ping</span>()  <span class=\"comment\">//函数 Ping 一个服务器连接，如果没有连接则重新连接。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">mysql_pconnect</span>()  <span class=\"comment\">//函数打开一个到 MySQL 服务器的持久连接。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">mysql_num_rows</span>()  <span class=\"comment\">//函数返回结果集中行的数目。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">mysql_num_fields</span>()  <span class=\"comment\">//函数返回结果集中字段的数。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">mysql_list_processes</span>()  <span class=\"comment\">//函数列出 MySQL 进程。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">mysql_list_dbs</span>()  <span class=\"comment\">//函数列出 MySQL 服务器中所有的数据库。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">mysql_insert_id</span>()  <span class=\"comment\">//函数返回上一步 INSERT 操作产生的 ID。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">mysql_info</span>()  <span class=\"comment\">//函数返回最近一条查询的信息。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">mysql_get_server_info</span>()  <span class=\"comment\">//函数返回 MySQL 服务器的信息。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">mysql_get_proto_info</span>()  <span class=\"comment\">//函数返回 MySQL 协议的信息。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">mysql_get_host_info</span>()  <span class=\"comment\">//函数返回 MySQL 主机的信息。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">mysql_get_client_info</span>()  <span class=\"comment\">//函数返回 MySQL 客户端信息。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">mysql_free_result</span>()  <span class=\"comment\">//函数释放结果内存。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">mysql_field_type</span>()  <span class=\"comment\">//函数返回结果集中指定字段的类型。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">mysql_field_table</span>()  <span class=\"comment\">//函数返回指定字段所在的表名。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">mysql_field_seek</span>()  <span class=\"comment\">//函数将结果集中的指针设定为指定的字段偏移量。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">mysql_field_name</span>()  <span class=\"comment\">//函数取得结果中指定字段的字段名。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">mysql_field_len</span>()  <span class=\"comment\">//函数返回指定字段的长度。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">mysql_field_flags</span>()  <span class=\"comment\">//函数从结果中取得和指定字段关联的标志。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">mysql_fetch_row</span>()  <span class=\"comment\">//函数从结果集中取得一行作为数字数组。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">mysql_fetch_object</span>()  <span class=\"comment\">//函数从结果集（记录集）中取得一行作为对象。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">mysql_fetch_lengths</span>()  <span class=\"comment\">//函数取得一行中每个字段的内容的长度。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">mysql_fetch_field</span>()  <span class=\"comment\">//函数从结果集中取得列信息并作为对象返回。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">mysql_fetch_assoc</span>()  <span class=\"comment\">//函数从结果集中取得一行作为关联数组。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">mysql_fetch_array</span>()  <span class=\"comment\">//函数从结果集中取得一行作为关联数组，或数字数组，或二者兼有 mysql_error()  //函数返回上一个 MySQL 操作产生的文本错误信息。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">mysql_errno</span>()  <span class=\"comment\">//函数返回上一个 MySQL 操作中的错误信息的数字编码。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">mysql_db_name</span>()  <span class=\"comment\">//函数取得 mysql_list_dbs()  //调用所返回的数据库名。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">mysql_data_seek</span>()  <span class=\"comment\">//函数移动内部结果的指针。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">mysql_connect</span>()  <span class=\"comment\">//函数打开非持久的 MySQL 连接。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">mysql_close</span>()  <span class=\"comment\">//函数关闭非持久的 MySQL 连接。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">mysql_client_encoding</span>()  <span class=\"comment\">//函数返回当前连接的字符集的名称。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">mysql_affected_rows</span>()  <span class=\"comment\">//函数返回前一次 MySQL 操作所影响的记录行数。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">tanh</span>()  <span class=\"comment\">//函数返回双曲正切。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">tan</span>()  <span class=\"comment\">//函数返回正切。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">srand</span>()  <span class=\"comment\">//函数播下随机数发生器种子。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">sqrt</span>()  <span class=\"comment\">//函数返回一个数的平方根。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">sinh</span>()  <span class=\"comment\">//函数返回一个数的双曲正弦。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">sin</span>()  <span class=\"comment\">//函数返回一个数的正弦。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">round</span>()  <span class=\"comment\">//函数对浮点数进行四舍五入。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">rand</span>()  <span class=\"comment\">//函数返回随机整数。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">rad2deg</span>()  <span class=\"comment\">//函数把弧度数转换为角度数。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">pow</span>()  <span class=\"comment\">//函数返回 x 的 y 次方。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">pi</span>()  <span class=\"comment\">//函数返回圆周率的值。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">octdec</span>()  <span class=\"comment\">//函数把八进制转换为十进制。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">mt_srand</span>()  <span class=\"comment\">//播种 Mersenne Twister 随机数生成器。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">mt_rand</span>()  <span class=\"comment\">//使用 Mersenne Twister 算法返回随机整数。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">mt_getrandmax</span>()  <span class=\"comment\">//显示随机数的最大可能值。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">min</span>()  <span class=\"comment\">//返回最小值。 max()  //返回最大值。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">log1p</span>()  <span class=\"comment\">//以返回 log(1 + x)，甚至当 x 的值接近零也能计算出准确结果。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">log10</span>()  <span class=\"comment\">//以 10 为底的对数。 log()  //返回自然对数。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">lcg_value</span>()  <span class=\"comment\">//组合线性同余发生器。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">is_nan</span>()  <span class=\"comment\">//判断是否为合法数值。 is_infinite()  //判断是否为无限值。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">is_finite</span>()  <span class=\"comment\">//函数判断是否为有限值。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">hypot</span>()  <span class=\"comment\">//函数计算一直角三角形的斜边长度。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">hexdec</span>()  <span class=\"comment\">//函数把十六进制转换为十进制。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">fmod</span>()  <span class=\"comment\">//函数显示随机数最大的可能值。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">fmod</span>()  <span class=\"comment\">//函数返回除法的浮点数余数。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">floor</span>()  <span class=\"comment\">//函数向下舍入为最接近的整数。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">expm1</span>()  <span class=\"comment\">//函数返回 exp(x) - 1，甚至当 number 的值接近零也能计算出准确结果。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">exp</span>()  <span class=\"comment\">//函数计算 e 的指数。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">deg2rad</span>()  <span class=\"comment\">//函数将角度转换为弧度。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">decoct</span>()  <span class=\"comment\">//函数把十进制转换为八进制。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">dechex</span>()  <span class=\"comment\">//函数把十进制转换为十六进制。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">decbin</span>()  <span class=\"comment\">//函数把十进制转换为二进制。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">cosh</span>()  <span class=\"comment\">//函数返回一个数的双曲余弦。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">cos</span>()  <span class=\"comment\">//函数返回一个数的余弦。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">ceil</span>()  <span class=\"comment\">//函数向上舍入为最接近的整数。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">bindec</span>()  <span class=\"comment\">//函数把二进制转换为十进制。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">base_convert</span>()  <span class=\"comment\">//函数在任意进制之间转换数字。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">atanh</span>()  <span class=\"comment\">//函数返回一个角度的反双曲正切。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">atan</span>()  <span class=\"comment\">//和 atan2()  //和 atan2()  //函数</span></span><br><span class=\"line\">PHP Math 函数</span><br><span class=\"line\"><span class=\"title function_ invoke__\">asinh</span>()  <span class=\"comment\">//函数返回一个数的反双曲正弦。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">asin</span>()  <span class=\"comment\">//函数返回不同数值的反正弦，返回的结果是介于 -PI/2 与 PI/2 之间的弧度值。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">acosh</span>()  <span class=\"comment\">//函数返回一个数的反双曲余弦。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">acos</span>()  <span class=\"comment\">//函数返回一个数的反余弦。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">abs</span>()  <span class=\"comment\">//函数返回一个数的绝对值。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">mail</span>()  <span class=\"comment\">//函数允许您从脚本中直接发送电子邮件。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">libxml_use_internal_errors</span>()  <span class=\"comment\">//函数禁用标准的 libxml 错误，并启用用户错误处理。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">libxml_get_last_error</span>()  <span class=\"comment\">//函数从 libxml 错误缓冲中获取最后一个错误。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">libxml_get_errors</span>()  <span class=\"comment\">//函数从 libxml 错误缓冲中获取错误。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">libxml_clear_errors</span>()  <span class=\"comment\">//函数清空 libxml 错误缓冲。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">setrawcookie</span>()  <span class=\"comment\">//函数不对 cookie 值进行 URL 编码，发送一个 HTTP cookie。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">setcookie</span>()  <span class=\"comment\">//函数向客户端发送一个 HTTP cookie。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">headers_sent</span>()  <span class=\"comment\">//函数检查 HTTP 报头是否发送/已发送到何处。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">headers_list</span>()  <span class=\"comment\">//函数返回已发送的（或待发送的）响应头部的一个列表。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">header</span>()  <span class=\"comment\">//函数向客户端发送原始的 HTTP 报头。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">ftp_systype</span>()  <span class=\"comment\">//函数返回远程 FTP 服务器的系统类型标识符。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">ftp_ssl_connect</span>()  <span class=\"comment\">//函数打开一个安全的 SSL-FTP 连接。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">ftp_size</span>()  <span class=\"comment\">//函数返回指定文件的大小。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">ftp_site</span>()  <span class=\"comment\">//函数向服务器发送 SITE 命令。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">ftp_set_option</span>()  <span class=\"comment\">//函数设置各种 FTP 运行时选项。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">ftp_rmdir</span>()  <span class=\"comment\">//函数删除一个目录。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">ftp_rename</span>()  <span class=\"comment\">//函数更改 FTP 服务器上的文件或目录名。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">ftp_rawlist</span>()  <span class=\"comment\">//函数返回指定目录中文件的详细列表。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">ftp_raw</span>()  <span class=\"comment\">//函数向 FTP 服务器发送一个 raw 命令。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">ftp_quit</span>()  <span class=\"comment\">//函数关闭 FTP 连接。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">ftp_pwd</span>()  <span class=\"comment\">//函数返回当前目录名。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">ftp_put</span>()  <span class=\"comment\">//函数把文件上传到服务器。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">ftp_pasv</span>()  <span class=\"comment\">//函数把被动模式设置为打开或关闭。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">ftp_nlist</span>()  <span class=\"comment\">//函数返回指定目录的文件列表。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">ftp_nb_put</span>()  <span class=\"comment\">//函数把文件上传到服务器 (non-blocking)。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">ftp_nb_get</span>()  <span class=\"comment\">//函数从 FTP 服务器上获取文件并写入本地文件 (non-blocking)。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">ftp_nb_fput</span>()  <span class=\"comment\">//函数上传一个已打开的文件，并在 FTP 服务器上把它保存为文件 (non-blocking)。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">ftp_nb_fget</span>()  <span class=\"comment\">//函数从 FTP 服务器上下载一个文件并保存到本地已经打开的一个文件中 (non-blocking)。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">ftp_nb_continue</span>()  <span class=\"comment\">//函数连续获取 / 发送文件。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">ftp_mkdir</span>()  <span class=\"comment\">//函数在 FTP 服务器上建立新目录。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">ftp_mdtm</span>()  <span class=\"comment\">//函数返回指定文件的最后修改时间。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">ftp_login</span>()  <span class=\"comment\">//函数登录 FTP 服务器。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">ftp_get</span>()  <span class=\"comment\">//函数从 FTP 服务器上下载一个文件。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">ftp_get_option</span>()  <span class=\"comment\">//函数返回当前 FTP 连接的各种不同的选项设置。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">ftp_fput</span>()  <span class=\"comment\">//函数上传一个已经打开的文件到 FTP 服务器。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">ftp_fget</span>()  <span class=\"comment\">//函数从 FTP 服务器上下载一个文件并保存到本地一个已经打开的文件中。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">ftp_exec</span>()  <span class=\"comment\">//函数请求在 FTP 服务器上执行一个程序或命令。 ftp_delete()  //函数删除 FTP 服务器上的一个文件。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">ftp_connect</span>()  <span class=\"comment\">//函数建立一个新的 FTP 连接。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">ftp_close</span>()  <span class=\"comment\">//函数关闭 FTP 连接。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">ftp_chmod</span>()  <span class=\"comment\">//函数设置 FTP 服务器上指定文件的权限。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">ftp_chdir</span>()  <span class=\"comment\">//函数改变 FTP 服务器上的当前目录。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">ftp_cdup</span>()  <span class=\"comment\">//函数把当前目录改变为 FTP 服务器上的父目录。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">ftp_alloc</span>()  <span class=\"comment\">//函数为要上传到 FTP 服务器的文件分配空间。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">filter_var</span>()  <span class=\"comment\">//函数通过指定的过滤器过滤变量。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">filter_var_array</span>()  <span class=\"comment\">//函数获取多项变量，并进行过滤。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">filter_list</span>()  <span class=\"comment\">//函数返回包含所有得到支持的过滤器的一个数组。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">filter_input_array</span>()  <span class=\"comment\">//函数从脚本外部获取多项输入，并进行过滤。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">filter_input</span>()  <span class=\"comment\">//函数从脚本外部获取输入，并进行过滤。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">filter_id</span>()  <span class=\"comment\">//函数返回指定过滤器的 ID 号。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">filter_has_var</span>()  <span class=\"comment\">//函数检查是否存在指定输入类型的变量。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">unlink</span>()  <span class=\"comment\">//函数删除文件。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">umask</span>()  <span class=\"comment\">//函数改变当前的 umask。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">touch</span>()  <span class=\"comment\">//函数设置指定文件的访问和修改时间。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">tmpfile</span>()  <span class=\"comment\">//函数以读写（w+）模式建立一个具有唯一文件名的临时文件。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">tempnam</span>()  <span class=\"comment\">//函数创建一个具有唯一文件名的临时文件。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">symlink</span>()  <span class=\"comment\">//函数创建符号连接。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">stat</span>()  <span class=\"comment\">//函数返回关于文件的信息。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">set_file_buffer</span>()  <span class=\"comment\">//函数设置打开文件的缓冲大小。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">rmdir</span>()  <span class=\"comment\">//函数删除空的目录。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">rewind</span>()  <span class=\"comment\">//函数将文件指针的位置倒回文件的开头。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">rename</span>()  <span class=\"comment\">//函数重命名文件或目录。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">realpath</span>()  <span class=\"comment\">//函数返回绝对路径。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">readlink</span>()  <span class=\"comment\">//函数返回符号连接指向的目标。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">readfile</span>()  <span class=\"comment\">//函数输出一个文件。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">popen</span>()  <span class=\"comment\">//函数打开进程文件指针。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">pclose</span>()  <span class=\"comment\">//函数关闭由 popen()  //打开的管道。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">pathinfo</span>()  <span class=\"comment\">//函数以数组的形式返回文件路径的信息。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">parse_ini_file</span>()  <span class=\"comment\">//函数解析一个配置文件，并以数组的形式返回其中的设置。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">move_uploaded_file</span>()  <span class=\"comment\">//函数将上传的文件移动到新位置。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">mkdir</span>()  <span class=\"comment\">//函数创建目录。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">lstat</span>()  <span class=\"comment\">//函数返回关于文件或符号连接的信息。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">linkinfo</span>()  <span class=\"comment\">//函数返回连接的信息。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">link</span>()  <span class=\"comment\">//函数建立一个硬连接。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">is_writeable</span>()  <span class=\"comment\">//函数判断指定的文件是否可写。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">is_writable</span>()  <span class=\"comment\">//函数判断指定的文件是否可写。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">is_uploaded_file</span>()  <span class=\"comment\">//函数判断指定的文件是否是通过 HTTP POST 上传的。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">is_readable</span>()  <span class=\"comment\">//函数判断指定文件名是否可读。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">is_link</span>()  <span class=\"comment\">//函数判断指定文件名是否为一个符号连接。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">is_file</span>()  <span class=\"comment\">//函数检查指定的文件名是否是正常的文件。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">is_executable</span>()  <span class=\"comment\">//函数检查指定的文件是否可执行。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">is_dir</span>()  <span class=\"comment\">//函数检查指定的文件是否是目录。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">glob</span>()  <span class=\"comment\">//函数返回匹配指定模式的文件名或目录。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">fwrite</span>()  <span class=\"comment\">//函数写入文件（可安全用于二进制文件）。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">ftruncate</span>()  <span class=\"comment\">//函数把文件截断到指定的长度。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">ftell</span>()  <span class=\"comment\">//函数在打开文件中的当前位置。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">fstat</span>()  <span class=\"comment\">//函数返回关于打开文件的信息。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">fseek</span>()  <span class=\"comment\">//函数在打开的文件中定位。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">fscanf</span>()  <span class=\"comment\">//函数根据指定的格式对来自打开的文件的输入进行解析。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">fread</span>()  <span class=\"comment\">//函数读取文件（可安全用于二进制文件）。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">fputs</span>()  <span class=\"comment\">//函数写入文件（可安全用于二进制文件）。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">fputcsv</span>()  <span class=\"comment\">//函数将行格式化为 CSV 并写入一个打开的文件。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">fpassthru</span>()  <span class=\"comment\">//函数输出文件指针处的所有剩余数据。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">fopen</span>()  <span class=\"comment\">//函数打开文件或者 URL。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">fnmatch</span>()  <span class=\"comment\">//函数根据指定的模式来匹配文件名或字符串。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">flock</span>()  <span class=\"comment\">//函数锁定或释放文件。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">filetype</span>()  <span class=\"comment\">//函数返回指定文件或目录的类型。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">filesize</span>()  <span class=\"comment\">//函数返回指定文件的大小。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">fileperms</span>()  <span class=\"comment\">//函数返回文件或目录的权限。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">fileowner</span>()  <span class=\"comment\">//函数返回文件的所有者。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">filemtime</span>()  <span class=\"comment\">//函数返回文件内容上次的修改时间。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">fileinode</span>()  <span class=\"comment\">//函数返回文件的 inode 编号。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">filegroup</span>()  <span class=\"comment\">//函数返回指定文件的组 ID。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">filectime</span>()  <span class=\"comment\">//函数返回指定文件的上次 inode 修改时间。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">fileatime</span>()  <span class=\"comment\">//函数返回指定文件的上次访问时间。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">file_put_contents</span>()  <span class=\"comment\">//函数把一个字符串写入文件中。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">file_get_contents</span>()  <span class=\"comment\">//函数把整个文件读入一个字符串中。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">file_exists</span>()  <span class=\"comment\">//函数检查文件或目录是否存在。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">file</span>()  <span class=\"comment\">//函数把整个文件读入一个数组中。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">fgetss</span>()  <span class=\"comment\">//函数从打开的文件中读取一行并过滤掉 HTML 和 PHP 标记。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">fgets</span>()  <span class=\"comment\">//函数从文件指针中读取一行。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">fgetcsv</span>()  <span class=\"comment\">//函数从文件指针中读入一行并解析 CSV 字段。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">fgetc</span>()  <span class=\"comment\">//函数从文件指针中读取一个字符。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">fflush</span>()  <span class=\"comment\">//函数将缓冲内容输出到文件。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">feof</span>()  <span class=\"comment\">//函数检测是否已到达文件末尾 (eof)。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">fclose</span>()  <span class=\"comment\">//函数关闭一个打开文件。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">diskfreespace</span>()  <span class=\"comment\">//函数返回目录中的可用空间。该函数是 disk_free_space()  //函数的别名。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">disk_total_space</span>()  <span class=\"comment\">//函数返回指定目录的磁盘总大小。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">disk_free_space</span>()  <span class=\"comment\">//函数返回目录中的可用空间</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">dirname</span>()  <span class=\"comment\">//函数返回路径中的目录部分。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">clearstatcache</span>()  <span class=\"comment\">//函数拷贝文件。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">clearstatcache</span>()  <span class=\"comment\">//函数清除文件状态缓存。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">chown</span>()  <span class=\"comment\">//函数改变指定文件的所有者。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">chmod</span>()  <span class=\"comment\">//函数改变文件模式。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">chgrp</span>()  <span class=\"comment\">//函数改变文件所属的组。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">basename</span>()  <span class=\"comment\">//函数返回路径中的文件名部分。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">set_exception_handler</span>()  <span class=\"comment\">//handler()  //函数</span></span><br><span class=\"line\"></span><br><span class=\"line\">PHP <span class=\"built_in\">Error</span> 和 Logging 函数</span><br><span class=\"line\"><span class=\"title function_ invoke__\">set_exception_handler</span>()  <span class=\"comment\">//函数设置用户自定义的异常处理函数。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">set_error_handler</span>()  <span class=\"comment\">//函数设置用户自定义的错误处理函数。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">restore_exception_handler</span>()  <span class=\"comment\">//函数恢复之前的异常处理程序，该程序是由</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">set_exception_handler</span>()  <span class=\"comment\">//函数改变的。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">restore_error_handler</span>()  <span class=\"comment\">//函数恢复之前的错误处理程序，该程序是由</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">set_error_handler</span>()  <span class=\"comment\">//函数改变的。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">error_reporting</span>()  <span class=\"comment\">//设置 PHP 的报错级别并返回当前级别。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">error_log</span>()  <span class=\"comment\">//函数向服务器错误记录、文件或远程目标发送一个错误。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">error_get_last</span>()  <span class=\"comment\">//函数获取最后发生的错误。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">debug_print_backtrace</span>()  <span class=\"comment\">//函数输出 backtrace。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">debug_backtrace</span>()  <span class=\"comment\">//cktrace()  //函数</span></span><br><span class=\"line\">PHP <span class=\"built_in\">Error</span> 和 Logging 函数</span><br><span class=\"line\"><span class=\"title function_ invoke__\">scandir</span>()  <span class=\"comment\">//函数返回一个数组，其中包含指定路径中的文件和目录。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">rewinddir</span>()  <span class=\"comment\">//函数重置由</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">opendir</span>()  <span class=\"comment\">//打开的目录句柄。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">readdir</span>()  <span class=\"comment\">//函数返回由 opendir()  //打开的目录句柄中的条目。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">opendir</span>()  <span class=\"comment\">//函数打开一个目录句柄，可由 closedir()，readdir()  //和 rewinddir()  //使用。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">getcwd</span>()  <span class=\"comment\">//函数返回当前目录。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">closedir</span>()  <span class=\"comment\">//函数关闭由 opendir()  //函数打开的目录句柄。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">dir</span>()  <span class=\"comment\">//函数打开一个目录句柄，并返回一个对象。这个对象包含三个方法：read()  //, rewind()  //以及 close()。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">chroot</span>()  <span class=\"comment\">//函数把当前进程的根目录改变为指定的目录。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">chdir</span>()  <span class=\"comment\">//函数把当前的目录改变为指定的目录。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">time</span>()  <span class=\"comment\">//函数返回当前时间的 Unix 时间戳。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">strtotime</span>()  <span class=\"comment\">//函数将任何英文文本的日期时间描述解析为 Unix 时间戳。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">strptime</span>()  <span class=\"comment\">//函数解析由 strftime()  //生成的日期／时间。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">strftime</span>()  <span class=\"comment\">//函数根据区域设置格式化本地时间／日期。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">mktime</span>()  <span class=\"comment\">//函数返回一个日期的 Unix 时间戳。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">microtime</span>()  <span class=\"comment\">//函数返回当前 Unix 时间戳和微秒数。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">localtime</span>()  <span class=\"comment\">//函数返回本地时间（一个数组）。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">idate</span>()  <span class=\"comment\">//函数将本地时间/日期格式化为整数。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">gmstrftime</span>()  <span class=\"comment\">//函数根据本地区域设置格式化 GMT/UTC 时间／日期。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">gmmktime</span>()  <span class=\"comment\">//函数取得 GMT 日期的 UNIX 时间戳。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">gmdate</span>()  <span class=\"comment\">//函数格式化 GMT/UTC 日期/时间。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">gettimeofday</span>()  <span class=\"comment\">//函数返回一个包含当前时间信息的数组。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">getdate</span>()  <span class=\"comment\">//函数取得日期／时间信息。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">date</span>()  <span class=\"comment\">//函数格式化一个本地时间／日期。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">date_sunset</span>()  <span class=\"comment\">//函数返回指定的日期与地点的日落时间。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">date_sunrise</span>()  <span class=\"comment\">//函数返回指定的日期与地点的日出时间。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">date_default_timezone_set</span>()  <span class=\"comment\">//函数设置用在脚本中所有日期/时间函数的默认时区。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">date_default_timezone_get</span>()  <span class=\"comment\">//函数返回脚本中所有日期时间函数所使用的默认时区。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">checkdate</span>()  <span class=\"comment\">//函数验证一个格里高里日期。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">UnixToJD</span>()  <span class=\"comment\">//函数把 Unix 时间戳转换为儒略日计数。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">JulianToJD</span>()  <span class=\"comment\">//函数把儒略历转换为儒略日计数。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">JewishToJD</span>()  <span class=\"comment\">//函数把犹太历法转换为儒略日计数。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">JDToUnix</span>()  <span class=\"comment\">//函数把儒略日计数转换为 Unix 时间戳。</span></span><br><span class=\"line\">PHP Array 函数</span><br><span class=\"line\"><span class=\"title function_ invoke__\">JDToGregorian</span>()  <span class=\"comment\">//函数把儒略日计数转换为格利高里历法。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">JDToFrench</span>()  <span class=\"comment\">//函数把儒略日计数转换为法国共和国历法。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">JDMonthName</span>()  <span class=\"comment\">//函数返回指定历法的月份字符串。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">JDDayOfWeek</span>()  <span class=\"comment\">//函数返回日期在周几。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">GregorianToJD</span>()  <span class=\"comment\">//函数将格利高里历法转换成为儒略日计数。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">FrenchToJD</span>()  <span class=\"comment\">//函数将法国共和历法转换成为儒略日计数。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">easter_days</span>()  <span class=\"comment\">//函数返回指定年份的复活节与 3 月 21 日之间的天数。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">easter_date</span>()  <span class=\"comment\">//函数返回指定年份的复活节午夜的 Unix 时间戳。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">cal_to_jd</span>()  <span class=\"comment\">//函数把指定的日期转换为儒略日计数。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">cal_info</span>()  <span class=\"comment\">//函数返回一个数组，其中包含了关于给定历法的信息。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">cal_from_jd</span>()  <span class=\"comment\">//函数把儒略日计数转换为指定历法的日期。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">cal_days_in_month</span>()  <span class=\"comment\">//函数针对指定的年份和日历，返回一个月中的天数。 usort()  //函数使用用户自定义的函数对数组排序。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">uksort</span>()  <span class=\"comment\">//函数使用用户自定义的比较函数按照键名对数组排序，并保持索引关系。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">uasort</span>()  <span class=\"comment\">//函数使用用户自定义的比较函数对数组排序，并保持索引关联（不为元素分配新的键）。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">sort</span>()  <span class=\"comment\">//函数按升序对给定数组的值排序。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">sizeof</span>()  <span class=\"comment\">//函数计算数组中的单元数目或对象中的属性个数。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">shuffle</span>()  <span class=\"comment\">//函数把数组中的元素按随机顺序重新排列。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">rsort</span>()  <span class=\"comment\">//函数对数组的元素按照键值进行逆向排序。与 arsort()  //的功能基本相同。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">reset</span>()  <span class=\"comment\">//函数把数组的内部指针指向第一个元素，并返回这个元素的值。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">range</span>()  <span class=\"comment\">//函数创建并返回一个包含指定范围的元素的数组。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">prev</span>()  <span class=\"comment\">//HP prev()  //函数</span></span><br><span class=\"line\">PHP Array 函数</span><br><span class=\"line\"><span class=\"title function_ invoke__\">pos</span>()  <span class=\"comment\">//函数是 current()  //函数 的别名。它可返回数组中当前元素的值。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">next</span>()  <span class=\"comment\">//函数把指向当前元素的指针移动到下一个元素的位置，并返回当前元素的值。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">natsort</span>()  <span class=\"comment\">//函数用自然顺序算法对给定数组中的元素排序。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">natcasesort</span>()  <span class=\"comment\">//函数用不区分大小写的自然顺序算法对给定数组中的元素排序。</span></span><br><span class=\"line\"><span class=\"keyword\">list</span>()  <span class=\"comment\">//函数用数组中的元素为一组变量赋值。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">ksort</span>()  <span class=\"comment\">//函数按照键名对数组排序，为数组值保留原来的键。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">krsort</span>()  <span class=\"comment\">//函数将数组按照键逆向排序，为数组值保留原来的键。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">key</span>()  <span class=\"comment\">//函数返回数组内部指针当前指向元素的键名。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">in_array</span>()  <span class=\"comment\">//函数在数组中搜索给定的值。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">extract</span>()  <span class=\"comment\">//</span></span><br><span class=\"line\">PHP Array 函数</span><br><span class=\"line\"><span class=\"title function_ invoke__\">end</span>()  <span class=\"comment\">//函数将数组内部指针指向最后一个元素，并返回该元素的值（如果成功）。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">each</span>()  <span class=\"comment\">//函数生成一个由数组当前内部指针所指向的元素的键名和键值组成的数组，并把内部指针向前移动。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">current</span>()  <span class=\"comment\">//函数返回数组中的当前元素（单元）。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">count</span>()  <span class=\"comment\">//函数计算数组中的单元数目或对象中的属性个数。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">compact</span>()  <span class=\"comment\">//函数创建一个由参数所带变量组成的数组。如果参数中存在数组，该数组中变量的值也会被获取。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">asort</span>()  <span class=\"comment\">//函数对数组进行排序并保持索引关系。主要用于对那些单元顺序很重要的结合数组进行排序。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">arsort</span>()  <span class=\"comment\">//函数对数组进行逆向排序并保持索引关系。主要用于对那些单元顺序很重要的结合数组进行排序。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">array_walk_recursive</span>()  <span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">cursive</span>()  <span class=\"comment\">//函数</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">array_walk</span>()  <span class=\"comment\">//函数对数组中的每个元素应用回调函数。如果成功则返回 TRUE，否则返回 FALSE。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">array_values</span>()  <span class=\"comment\">//函数返回一个包含给定数组中所有键值的数组，但不保留键名。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">array_unshift</span>()  <span class=\"comment\">//函数在数组开头插入一个或多个元素。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">array_unique</span>()  <span class=\"comment\">//函数移除数组中的重复的值，并返回结果数组。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">array_uintersect_assoc</span>()  <span class=\"comment\">//函数带索引检查计算数组的交集，用回调函数比较数据。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">array_uintersect</span>()  <span class=\"comment\">//函数计算数组的交集，用回调函数比较数据。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">array_udiff_uassoc</span>()  <span class=\"comment\">//函数返回 array1 数组中存在但其它数组中都不存在的部分。返回的数组中键名保持不变。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">array_udiff_assoc</span>()  <span class=\"comment\">//函数返回 array1 中存在但其它数组中都不存在的部分。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">array_udiff</span>()  <span class=\"comment\">//函数返回一个数组，该数组包括了所有在被比较数组中，但是不在任何其它参数数组中的值，键名保留不变。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">array_sum</span>()  <span class=\"comment\">//函数返回数组中所有值的总和。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">array_splice</span>()  <span class=\"comment\">//函数与 array_slice()  //函数类似，选择数组中的一系列元素，但不返回，而是删除它们并用其它值代替。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">array_slice</span>()  <span class=\"comment\">//函数在数组中根据条件取出一段值，并返回。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">array_shift</span>()  <span class=\"comment\">//函数删除数组中的第一个元素，并返回被删除元素的值。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">array_search</span>()  <span class=\"comment\">//函数与 in_array()  //一样，在数组中查找一个键值。如果找到了该值，匹配元素的键名会被返回。如果没找到，则返回 false。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">array_reverse</span>()  <span class=\"comment\">//函数将原数组中的元素顺序翻转，创建新的数组并返回。如果第二个参数指定为 true，则元素的键名保持不变，否则键名将丢失。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">array_reduce</span>()  <span class=\"comment\">//函数用回调函数迭代地将数组简化为单一的值。如果指定第三个参数，则该参数将被当成是数组中的第一个值来处理，或者如果数组为空的话就作为最终返回值。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">array_rand</span>()  <span class=\"comment\">//函数从数组中随机选出一个或多个元素，并返回。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">array_push</span>()  <span class=\"comment\">//函数向第一个参数的数组尾部添加一个或多个元素（入栈），然后返回新数组的长度。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">array_product</span>()  <span class=\"comment\">//函数计算并返回数组中所有值的乘积。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">array_pop</span>()  <span class=\"comment\">//函数删除数组中的最后一个元素。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">array_pad</span>()  <span class=\"comment\">//函数向一个数组插入带有指定值的指定数量的元素。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">array_multisort</span>()  <span class=\"comment\">//函数对多个数组或多维数组进行排序。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">array_merge_recursive</span>()  <span class=\"comment\">//函数与 array_merge()  //函数 一样，将一个或多个数组的元素的合并起来，一个数组中的值附加在前一个数组的后面。并返回作为结果的数组。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">array_merge</span>()  <span class=\"comment\">//函数把两个或多个数组合并为一个数组。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">array_map</span>()  <span class=\"comment\">//函数返回用户自定义函数作用后的数组。回调函数接受的参数数目应该和传递给 array_map()  //函数的数组数目一致。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">array_keys</span>()  <span class=\"comment\">//函数返回包含数组中所有键名的一个新数组。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">array_key_exists</span>()  <span class=\"comment\">//函数判断某个数组中是否存在指定的 key，如果该 key 存在，则返回 true，否则返回 false。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">array_intersect_ukey</span>()  <span class=\"comment\">//函数用回调函数比较键名来计算数组的交集。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">array_intersect_uassoc</span>()  <span class=\"comment\">//函数使用用户自定义的回调函数计算数组的交集，用回调函数比较索引。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">array_intersect_key</span>()  <span class=\"comment\">//函数使用键名比较计算数组的交集。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">array_intersect_assoc</span>()  <span class=\"comment\">//函数返回两个或多个数组的交集数组。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">array_intersect</span>()  <span class=\"comment\">//函数返回两个或多个数组的交集数组。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">array_flip</span>()  <span class=\"comment\">//函数返回一个反转后的数组，如果同一值出现了多次，则最后一个键名将作为它的值，所有其他的键名都将丢失。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">array_filter</span>()  <span class=\"comment\">//函数用回调函数过滤数组中的元素，如果自定义过滤函数返回 true，则被操作的数组的当前值就会被包含在返回的结果数组中， 并将结果组成一个新的数组。如果原数组是一个关联数组，键名保持不变。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">array_fill</span>()  <span class=\"comment\">//函数用给定的值填充数组，返回的数组有 number 个元素，值为 value。返回的数组使用数字索引，从 start 位置开始并递增。如果 number 为 0 或小于 0，就会出错。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">array_diff_ukey</span>()  <span class=\"comment\">//返回一个数组，该数组包括了所有出现在 array1 中但是未出现在任何其它参数数组中的键名的值。注意关联关系保留不变。与 array_diff()  //不同的是，比较是根据键名而不是值来进行的。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">array_diff_uassoc</span>()  <span class=\"comment\">//函数使用用户自定义的回调函数 (callback) 做索引检查来计算两个或多个数组的差集。返回一个数组，该数组包括了在 array1 中但是不在任何其他参数数组中的值。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">array_diff_key</span>()  <span class=\"comment\">//函数返回一个数组，该数组包括了所有在被比较的数组中，但是不在任何其他参数数组中的键。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">array_diff_assoc</span>()  <span class=\"comment\">//函数返回两个数组的差集数组。该数组包括了所有在被比较的数组中，但是不在任何其他参数数组中的键和值。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">array_diff</span>()  <span class=\"comment\">//函数返回两个数组的差集数组。该数组包括了所有在被比较的数组中，但是不在任何其他参数数组中的键值。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">array_count_values</span>()  <span class=\"comment\">//函数用于统计数组中所有值出现的次数。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">array_combine</span>()  <span class=\"comment\">//函数通过合并两个数组来创建一个新数组，其中的一个数组是键名，另一个数组的值为键值。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">array_chunk</span>()  <span class=\"comment\">//函数把一个数组分割为新的数组块。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">array_change_key_case</span>()  <span class=\"comment\">//函数将数组的所有的 KEY 都转换为大写或小写。</span></span><br><span class=\"line\"><span class=\"keyword\">array</span>()  <span class=\"comment\">//创建数组，带有键和值。如果在规定数组时省略了键，则生成一个整数键，这个 key 从 0 开始，然后以 1 进行递增。</span></span><br></pre></td></tr></table></figure>\n","text":"1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br>18<br>19<br>20<br>21<br>22<br>23<br>24<br>25<br","raw":null,"photos":[],"categories":[],"tags":[{"name":"php","slug":"php","count":1,"path":"api/tags/php.json"}]},{"title":"hexo migrate host_a to host_b","slug":"hexo-migrate-host-a-to-host-b","date":"2025-02-12T13:44:05.000Z","updated":"2025-02-12T13:47:32.535Z","comments":true,"path":"api/articles/hexo-migrate-host-a-to-host-b.json","excerpt":"","keywords":null,"cover":null,"content":"<p>将Hexo博客从A主机迁移到B主机，可以按照以下步骤进行操作：</p>\n<ol>\n<li>准备工作<br>备份必要文件：在A主机上，备份以下文件和目录：<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">_config.yml</span><br><span class=\"line\">themes/</span><br><span class=\"line\"><span class=\"built_in\">source</span>/</span><br><span class=\"line\">scaffolds/</span><br><span class=\"line\">package.json</span><br><span class=\"line\">.gitignore</span><br></pre></td></tr></table></figure>\n安装必要的软件：在B主机上，确保安装了以下软件：<br>Git：用于版本控制和同步。<br>Node.js 和 npm：用于运行Hexo。<br>Hexo：用于生成和部署博客。</li>\n<li>迁移步骤<br>2.1 在A主机上备份<br>将上述文件和目录打包成一个压缩文件，方便传输到B主机。可以使用以下命令：<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar -czvf hexo_backup.tar.gz _config.yml themes/ <span class=\"built_in\">source</span>/ scaffolds/ package.json .gitignore</span><br></pre></td></tr></table></figure>\n2.2 在B主机上安装必要的软件<br>安装Git：<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">sudo</span> apt install git</span><br></pre></td></tr></table></figure>\n安装Node.js和npm：<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">sudo</span> apt install nodejs npm</span><br></pre></td></tr></table></figure>\n安装Hexo：<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-cli -g</span><br></pre></td></tr></table></figure>\n2.3 在B主机上恢复备份<br>将备份文件传输到B主机上，并解压到目标目录：<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar -xzvf hexo_backup.tar.gz -C /path/to/your/hexo/blog</span><br></pre></td></tr></table></figure>\n进入博客目录：<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /path/to/your/hexo/blog</span><br></pre></td></tr></table></figure>\n2.4 安装项目依赖<br>安装项目依赖：<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install</span><br></pre></td></tr></table></figure>\n安装部署插件（如果需要）：<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>\n2.5 测试博客<br>生成静态页面：<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo generate</span><br></pre></td></tr></table></figure>\n启动本地服务器预览博客：<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo server</span><br></pre></td></tr></table></figure>\n打开浏览器访问 <a href=\"http://localhost:4000，查看博客是否正常。\">http://localhost:4000，查看博客是否正常。</a><br>2.6 部署博客<br>部署博客到远程服务器：<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo deploy</span><br></pre></td></tr></table></figure></li>\n<li>配置Git<br>配置Git用户名和邮箱：<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global user.name <span class=\"string\">&quot;Your Name&quot;</span></span><br><span class=\"line\">git config --global user.email <span class=\"string\">&quot;your_email@example.com&quot;</span></span><br></pre></td></tr></table></figure>\n生成SSH密钥（如果需要）：<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-keygen -t rsa -C <span class=\"string\">&quot;your_email@example.com&quot;</span></span><br></pre></td></tr></table></figure>\n将SSH密钥添加到GitHub：<br>将生成的SSH密钥（通常位于~&#x2F;.ssh&#x2F;id_rsa.pub）内容复制到GitHub账户的SSH密钥设置中。</li>\n<li>使用Git同步<br>克隆远程仓库（如果之前已经将博客源文件推送到GitHub）：<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> -b hexo https://github.com/yourname/yourname.github.io.git</span><br></pre></td></tr></table></figure>\n提交并推送本地更改：<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add --all</span><br><span class=\"line\">git commit -m <span class=\"string\">&quot;Update blog&quot;</span></span><br><span class=\"line\">git push origin hexo</span><br></pre></td></tr></table></figure>\n注意事项<br>确保在迁移过程中，.gitignore文件正确配置，避免不必要的文件被上传到远程仓库。<br>如果在迁移过程中遇到权限问题，可能需要调整文件和目录的权限。<br>如果使用了自定义主题或插件，确保在新主机上重新安装这些依赖。<br>通过以上步骤，你可以顺利将Hexo博客从A主机迁移到B主机。如果在迁移过程中遇到任何问题，可以参考上述链接中的详细教程。</li>\n</ol>\n","text":"将Hexo博客从A主机迁移到B主机，可以按照以下步骤进行操作：准备工作<br>备份必要文件：在A主机上，备份以下文件和目录：1<br>2<br>3<br>4<br>5<br>6<br>_config.yml<br>themes/<br>source/<br>scaffolds/<","raw":null,"photos":[],"categories":[],"tags":[{"name":"hexo","slug":"hexo","count":1,"path":"api/tags/hexo.json"}]},{"title":"php composer proxy","slug":"php-composer-proxy","date":"2025-02-12T13:16:03.000Z","updated":"2025-02-12T13:39:38.225Z","comments":true,"path":"api/articles/php-composer-proxy.json","excerpt":"","keywords":null,"cover":null,"content":"<p>根据您提供的搜索结果，以下是解决Composer和cURL连接问题的综合解决方案：</p>\n<ol>\n<li>检查网络连接<br>确保您的网络连接正常，可以访问目标服务器。可以使用 ping 命令测试网络连接：<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ping getcomposer.org</span><br></pre></td></tr></table></figure>\n如果无法ping通，可能是网络配置问题或防火墙阻止了访问。</li>\n<li>使用代理或VPN<br>如果网络环境受限，可以配置代理或使用VPN来绕过限制。例如，使用代理服务器时，可以在 composer.json 中添加以下配置：<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">&quot;config&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;http-proxy&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;http://your-proxy-server:port&quot;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n或者使用命令行参数：<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">composer config http-proxy http://your-proxy-server:port</span><br></pre></td></tr></table></figure>\n。</li>\n<li>更改镜像源<br>使用国内的镜像源可以加快下载速度并减少连接问题。例如，使用阿里云镜像源：<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">composer config -g repo.packagist composer https://mirrors.aliyun.com/composer/</span><br></pre></td></tr></table></figure>\n。</li>\n<li>检查防火墙和安全策略<br>确保本地防火墙或网络安全策略允许Composer访问目标服务器。可能需要与网络管理员或安全团队沟通。</li>\n<li>调整超时设置<br>增加Composer的超时时间，可以使用以下命令：<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">composer config -g <span class=\"built_in\">timeout</span> 300</span><br></pre></td></tr></table></figure>\n这将设置超时时间为300秒。</li>\n<li>清除Composer缓存<br>清除Composer缓存后再次尝试安装依赖包：<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">composer clear-cache</span><br></pre></td></tr></table></figure>\n。</li>\n<li>检查SSL证书<br>如果遇到SSL证书问题（如错误60），确保系统中的CA证书是最新且有效的。可以使用以下命令检查SSL证书：<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">openssl s_client -connect getcomposer.org:443</span><br></pre></td></tr></table></figure>\n如果证书有问题，可能需要更新系统中的CA证书。</li>\n<li>查看日志和错误信息<br>Composer通常会将详细的错误信息写入日志文件，尝试查看日志以获取更多信息。可以使用以下命令：<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">composer diagnose</span><br></pre></td></tr></table></figure>\n这将检查Composer的配置和依赖关系，并提供详细的错误信息。</li>\n<li>重置网络设置<br>如果以上步骤都无法解决问题，尝试重置网络设置，例如重新启动网络服务或重建网络接口。<br>通过以上步骤，您应该能够诊断并解决Composer和cURL连接问题。如果问题仍然存在，可能需要更深入的系统诊断。</li>\n</ol>\n","text":"根据您提供的搜索结果，以下是解决Composer和cURL连接问题的综合解决方案：检查网络连接<br>确保您的网络连接正常，可以访问目标服务器。可以使用 ping 命令测试网络连接：1<br>ping getcomposer.org<br>如果无法ping通，可能是网络配置问题或","raw":null,"photos":[],"categories":[],"tags":[]},{"title":"Catbox","slug":"catbox","date":"2024-11-09T14:30:09.000Z","updated":"2024-11-09T14:47:50.859Z","comments":true,"path":"api/articles/catbox.json","excerpt":"","keywords":null,"cover":"https://files.catbox.moe/it5emi.png","content":"<h1 id=\"login-catbox\"><a href=\"#login-catbox\" class=\"headerlink\" title=\"login catbox\"></a>login catbox</h1><h1 id=\"upload-a-image\"><a href=\"#upload-a-image\" class=\"headerlink\" title=\"upload a image\"></a>upload a image</h1><p><img src=\"https://files.catbox.moe/it5emi.png\" alt=\"English Grammer\"></p>\n","text":"login catboxupload a image [Figure] ","raw":null,"photos":[],"categories":[],"tags":[{"name":"catbox","slug":"catbox","count":1,"path":"api/tags/catbox.json"},{"name":"image bed","slug":"image-bed","count":1,"path":"api/tags/image-bed.json"}]},{"title":"Hello World","slug":"hello-world","date":"2024-11-09T11:23:00.539Z","updated":"2024-11-09T11:23:00.479Z","comments":true,"path":"api/articles/hello-world.json","excerpt":"","keywords":null,"cover":null,"content":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># some helpful command</span></span><br><span class=\"line\">hexo g：hexo generate</span><br><span class=\"line\">hexo c：hexo clean</span><br><span class=\"line\">hexo s：hexo server</span><br><span class=\"line\">hexo d：hexo deploy</span><br><span class=\"line\"></span><br><span class=\"line\">hexo clean &amp;&amp; hexo g -s <span class=\"comment\">#清除、生成、启动</span></span><br><span class=\"line\">hexo clean &amp;&amp; hexo g -d <span class=\"comment\">#清除、生成、部署</span></span><br></pre></td></tr></table></figure>\n<p>Change Theme: <a href=\"hhttps://hexo.io/themes\">Offical</a></p>\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the ","raw":null,"photos":[],"categories":[],"tags":[]}]}